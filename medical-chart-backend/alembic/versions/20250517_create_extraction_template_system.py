"""add_extraction_template_feature

Revision ID: bf78f09c4326
Revises: b78d6e491a25
Create Date: 2025-05-17 15:59:42.757717

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import inspect

# revision identifiers, used by Alembic.
revision: str = 'bf78f09c4326'
down_revision: Union[str, None] = 'b78d6e491a25'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = inspect(conn)
    tables = inspector.get_table_names()
    
    # テンプレートテーブルの作成（存在しない場合のみ）
    if 'extraction_templates' not in tables:
        op.create_table('extraction_templates',
            sa.Column('id', sa.UUID(), nullable=False),
            sa.Column('name', sa.String(length=100), nullable=False),
            sa.Column('description', sa.Text(), nullable=True),
            sa.Column('type', sa.String(length=10), nullable=False),
            sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
            sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
            sa.Column('created_by', sa.String(length=50), nullable=False),
            sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=True),
            sa.PrimaryKeyConstraint('id')
        )

    # テンプレート項目テーブルの作成（存在しない場合のみ）
    if 'extraction_template_items' not in tables:
        op.create_table('extraction_template_items',
            sa.Column('id', sa.UUID(), nullable=False),
            sa.Column('template_id', sa.UUID(), nullable=False),
            sa.Column('name', sa.String(length=100), nullable=False),
            sa.Column('enabled', sa.Boolean(), server_default=sa.text('true'), nullable=True),
            sa.Column('display_order', sa.Integer(), nullable=False),
            sa.Column('description', sa.Text(), nullable=True),
            sa.Column('confidence_threshold', sa.Float(), server_default=sa.text('0.7'), nullable=True),
            sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
            sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
            sa.ForeignKeyConstraint(['template_id'], ['extraction_templates.id'], ondelete='CASCADE'),
            sa.PrimaryKeyConstraint('id')
        )

    # chartsテーブルにtemplate_id外部キーを追加（存在しない場合のみ）
    columns = {c['name'] for c in inspector.get_columns('charts')}
    if 'template_id' not in columns:
        op.add_column('charts', sa.Column('template_id', sa.UUID(), nullable=True))
        op.create_foreign_key(None, 'charts', 'extraction_templates', ['template_id'], ['id'])
    
    # インデックスと列の削除（存在する場合のみ）
    if 'extracted_data' in tables:
        # インデックスの存在確認と削除
        indexes = [idx['name'] for idx in inspector.get_indexes('extracted_data')]
        if 'idx_extracted_data_data' in indexes:
            op.drop_index('idx_extracted_data_data', table_name='extracted_data', postgresql_using='gin')
        if 'idx_extracted_data_needs_review_jsonb' in indexes:
            op.drop_index('idx_extracted_data_needs_review_jsonb', table_name='extracted_data', postgresql_using='gin')
        if 'ix_extracted_data_needs_review' in indexes:
            op.drop_index('ix_extracted_data_needs_review', table_name='extracted_data')

        # 列の存在確認と削除
        columns = {c['name'] for c in inspector.get_columns('extracted_data')}
        if 'reviewed_by' in columns:
            op.drop_column('extracted_data', 'reviewed_by')
        if 'reviewed_at' in columns:
            op.drop_column('extracted_data', 'reviewed_at')
        if 'overall_confidence_score' in columns:
            op.drop_column('extracted_data', 'overall_confidence_score')
        if 'needs_review' in columns:
            op.drop_column('extracted_data', 'needs_review')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = inspect(conn)
    
    # 外部キー制約の存在確認と削除
    for fk in inspector.get_foreign_keys('charts'):
        if fk.get('referred_table') == 'extraction_templates':
            op.drop_constraint(fk.get('name'), 'charts', type_='foreignkey')
            break
            
    # template_id列の削除
    columns = {c['name'] for c in inspector.get_columns('charts')}
    if 'template_id' in columns:
        op.drop_column('charts', 'template_id')
    
    # テーブルの存在確認と削除
    tables = inspector.get_table_names()
    if 'extraction_template_items' in tables:
        op.drop_table('extraction_template_items')
    
    if 'extraction_templates' in tables:
        op.drop_table('extraction_templates')
    # ### end Alembic commands ### 